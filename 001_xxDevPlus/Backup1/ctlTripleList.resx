<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnClose.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        Qk1eBAAAAAAAADYAAAAoAAAAEgAAABMAAAABABgAAAAAAAAAAADEDgAAxA4AAAAAAAAAAAAA+u3k+u3k
        +u3k+u3k+u3k+u3k+u3k+u3k+u3k+u3k+u3k+u3k+u3k+u3k+u3k+u3k+u3k+u3kAAD67eTZi1vZi1vY
        ilrVhFXVhFXVhFXVhVXWhVXVhFXVhVXVhFXVhFTVhVXVhVXVhVXVhVX67eQAAPrt5NiIWdeJWNmLW9iI
        WdeJWNmLW9aGVtmLW9aGVteJWNmLW9aGVtiIWdeJWNmLW9aGVvrt5AAA+u3k2Ila2Ipa2oxc2Ila2Ipa
        2oxc1odX2oxc1odX2Ipa2oxc1odX2Ila2Ipa2oxc1odX+u3kAAD67eTZi1vZi1vXiFdWNiNWNiNWNiPX
        h1fXiFfWh1dWNiNWNiNWNiPXh1fZi1vajlzXiVn67eQAAPrt5NqMXNqMW1Y3I+/QvO/QvO/QvFY2I9eJ
        WFY2I+/QvO/QvO/QvFY3I9qMW9qPXtiKWvrt5AAA+u3k2o1c2o5d2IpZVjck79C879C979C8Vjck79C9
        79C979C8Vjcj2Ipa2o5d3I9f2Itb+u3kAAD67eTbjl7ajl7Zi1vYi1pWNyTw0L3w0L3w0L3w0L3w0L1W
        NyTZi1vZi1vajl7ckF/ajFz67eQAAPrt5NuPXtuPX9mMXNmMW9mMW1c4JfDRvvDRvfDRvlc4JNqMXNmM
        XNmMXNuPX92RYNqNXfrt5AAA+u3k3JFf3JFf2o1d2o1d2o5dVzgl8NK+8NG+8NG+Vzgl2o1d2o1d2o1d
        3JFf3ZJi2o5e+u3kAAD67eTckWHckWDbjl7bj15YOSXx0r7x0r7w0r7x0r7x0r5XOSXbjl7bjl7ckWDc
        kWHckF/67eQAAPrt5NqNXNqOXduPX1g5JvHSvvHSvvHSv1g5JvHSv/HSvvHSvlg5JduPX9qOXdyPX9uQ
        YPrt5AAA+u3k245e2o5eWDkm8dK/8dO/8dK/WDom25BfWDkm8dK/8dO/8dO/WDkm2o5e3JBf3ZFg+u3k
        AAD67eTbj17bj1/ckWFYOidYOiZYOibdkWHckWDdkWBYOidYOiZYOibckWDbj1/dkWDdkmH67eQAAPrt
        5NyRX9yRX92SYtyRX9yRX92SYt2TYt2SYt2TYtyRX92SYt2TYtyRX9yRX92SYt2TYvrt5AAA+u3k3JFh
        3JFg3JFh3JFg3ZFh3JFh3JFh3JJg3JFh3JFh3JFg3ZFh3JFh3JFh3JJg3JFh+u3kAAD67eTdkmHdkmLd
        kmHdkmLdkmHckmHdkmLdkmHdkmHdkmHdkmLdkmHckmHdkmLdkmHdkmH67eQAAPrt5N6TYt2SYt6TYt2S
        Yt2TYt2TYt2TYt2TYt6TYt6TYt2SYt2TYt2TYt2TYt2TYt6TYvrt5AAA+u3k+u3k+u3k+u3k+u3k+u3k
        +u3k+u3k+u3k+u3k+u3k+u3k+u3k+u3k+u3k+u3k+u3k+u3kAAA=
</value>
  </data>
</root>